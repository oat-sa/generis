<?php

/**
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; under version 2
 * of the License (non-upgradable).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * Copyright (c) 2023 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);
 *
 */

namespace oat\generis\model\kernel\persistence\DataProvider\form\DTO;

class FormPropertyDTO
{
    private string $classUri;
    private string $propertyUri;
    private ?string $rangeUri;
    private ?string $widgetUri;
    private ?string $label;
    private array $validationRule;
    private ?string $guiOrder;
    private bool $isList;
    private array $value;
    /** @var array<FormPropertyOptionDTO> */
    private array $options = [];

    public function __construct(
        string $classUri,
        string $propertyUri,
        ?string $rangeUri,
        ?string $widgetUri,
        ?string $label,
        array $validationRule,
        ?string $guiOrder,
        bool $isList,
        array $value,
        array $options = []
    ) {
        $this->classUri = $classUri;
        $this->propertyUri = $propertyUri;
        $this->rangeUri = $rangeUri;
        $this->widgetUri = $widgetUri;
        $this->label = $label;
        $this->validationRule = $validationRule;
        $this->guiOrder = $guiOrder;
        $this->isList = $isList;
        $this->value = $value;
        foreach ($options as $option) {
            $this->options[$option['uri']] = new FormPropertyOptionDTO(...array_values($option));
        }
    }

    public function getOption(string $optionUri): FormPropertyOptionDTO
    {
        if (!array_key_exists($optionUri, $this->options)) {
            throw new \RuntimeException(sprintf('Uri %s was not found in options map', $optionUri));
        }

        return $this->options[$optionUri];
    }

    //-----------AUTOGENERATED----------------

    public function getClassUri(): string
    {
        return $this->classUri;
    }

    public function getPropertyUri(): string
    {
        return $this->propertyUri;
    }

    public function getRangeUri(): ?string
    {
        return $this->rangeUri;
    }

    public function getWidgetUri(): ?string
    {
        return $this->widgetUri;
    }

    public function getLabel(): ?string
    {
        return $this->label;
    }

    public function getValidationRule(): array
    {
        return $this->validationRule;
    }

    public function getGuiOrder(): ?string
    {
        return $this->guiOrder;
    }

    public function isList(): bool
    {
        return $this->isList;
    }

    public function getValue(): array
    {
        return $this->value;
    }

    public function getOptions(): array
    {
        return $this->options;
    }
}
